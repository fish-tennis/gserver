// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.1
// source: bags.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 容器类型
type ContainerType int32

const (
	ContainerType_ContainerType_None       ContainerType = 0
	ContainerType_ContainerType_CountItem  ContainerType = 1 // 可叠加的普通物品
	ContainerType_ContainerType_UniqueItem ContainerType = 2 // 不可叠加的普通物品(如带限时属性的普通物品)
	ContainerType_ContainerType_Equip      ContainerType = 3 // 装备
)

// Enum value maps for ContainerType.
var (
	ContainerType_name = map[int32]string{
		0: "ContainerType_None",
		1: "ContainerType_CountItem",
		2: "ContainerType_UniqueItem",
		3: "ContainerType_Equip",
	}
	ContainerType_value = map[string]int32{
		"ContainerType_None":       0,
		"ContainerType_CountItem":  1,
		"ContainerType_UniqueItem": 2,
		"ContainerType_Equip":      3,
	}
)

func (x ContainerType) Enum() *ContainerType {
	p := new(ContainerType)
	*p = x
	return p
}

func (x ContainerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerType) Descriptor() protoreflect.EnumDescriptor {
	return file_bags_proto_enumTypes[0].Descriptor()
}

func (ContainerType) Type() protoreflect.EnumType {
	return &file_bags_proto_enumTypes[0]
}

func (x ContainerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContainerType.Descriptor instead.
func (ContainerType) EnumDescriptor() ([]byte, []int) {
	return file_bags_proto_rawDescGZIP(), []int{0}
}

// 容器内元素数据变化类型
type ElemOpType int32

const (
	ElemOpType_ElemOpType_None   ElemOpType = 0
	ElemOpType_ElemOpType_Add    ElemOpType = 1 // 新加
	ElemOpType_ElemOpType_Update ElemOpType = 2 // 更新属性(不可叠加的元素,如装备)
	ElemOpType_ElemOpType_Delete ElemOpType = 3 // 删除
)

// Enum value maps for ElemOpType.
var (
	ElemOpType_name = map[int32]string{
		0: "ElemOpType_None",
		1: "ElemOpType_Add",
		2: "ElemOpType_Update",
		3: "ElemOpType_Delete",
	}
	ElemOpType_value = map[string]int32{
		"ElemOpType_None":   0,
		"ElemOpType_Add":    1,
		"ElemOpType_Update": 2,
		"ElemOpType_Delete": 3,
	}
)

func (x ElemOpType) Enum() *ElemOpType {
	p := new(ElemOpType)
	*p = x
	return p
}

func (x ElemOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ElemOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_bags_proto_enumTypes[1].Descriptor()
}

func (ElemOpType) Type() protoreflect.EnumType {
	return &file_bags_proto_enumTypes[1]
}

func (x ElemOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ElemOpType.Descriptor instead.
func (ElemOpType) EnumDescriptor() ([]byte, []int) {
	return file_bags_proto_rawDescGZIP(), []int{1}
}

// 容器更新
// 整合不同的容器,不同的操作类型(增加,更新,删除),都统一在一个消息里面
type ElemContainerUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ElemOps []*ElemOp `protobuf:"bytes,1,rep,name=ElemOps,proto3" json:"ElemOps,omitempty"` // 容器数据变化,增加,更新,删除
}

func (x *ElemContainerUpdate) Reset() {
	*x = ElemContainerUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bags_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElemContainerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElemContainerUpdate) ProtoMessage() {}

func (x *ElemContainerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_bags_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElemContainerUpdate.ProtoReflect.Descriptor instead.
func (*ElemContainerUpdate) Descriptor() ([]byte, []int) {
	return file_bags_proto_rawDescGZIP(), []int{0}
}

func (x *ElemContainerUpdate) GetElemOps() []*ElemOp {
	if x != nil {
		return x.ElemOps
	}
	return nil
}

// 容器内元素数据变化
type ElemOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerType ContainerType `protobuf:"varint,1,opt,name=ContainerType,proto3,enum=gserver.ContainerType" json:"ContainerType,omitempty"`
	OpType        ElemOpType    `protobuf:"varint,2,opt,name=OpType,proto3,enum=gserver.ElemOpType" json:"OpType,omitempty"`
	ElemData      *anypb.Any    `protobuf:"bytes,3,opt,name=elemData,proto3" json:"elemData,omitempty"` // 元素数据
}

func (x *ElemOp) Reset() {
	*x = ElemOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bags_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElemOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElemOp) ProtoMessage() {}

func (x *ElemOp) ProtoReflect() protoreflect.Message {
	mi := &file_bags_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElemOp.ProtoReflect.Descriptor instead.
func (*ElemOp) Descriptor() ([]byte, []int) {
	return file_bags_proto_rawDescGZIP(), []int{1}
}

func (x *ElemOp) GetContainerType() ContainerType {
	if x != nil {
		return x.ContainerType
	}
	return ContainerType_ContainerType_None
}

func (x *ElemOp) GetOpType() ElemOpType {
	if x != nil {
		return x.OpType
	}
	return ElemOpType_ElemOpType_None
}

func (x *ElemOp) GetElemData() *anypb.Any {
	if x != nil {
		return x.ElemData
	}
	return nil
}

// int64封装成message,用于序列化成google.protobuf.Any
type UniqueId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *UniqueId) Reset() {
	*x = UniqueId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bags_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniqueId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniqueId) ProtoMessage() {}

func (x *UniqueId) ProtoReflect() protoreflect.Message {
	mi := &file_bags_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniqueId.ProtoReflect.Descriptor instead.
func (*UniqueId) Descriptor() ([]byte, []int) {
	return file_bags_proto_rawDescGZIP(), []int{2}
}

func (x *UniqueId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 元素数量
type ElemNum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CfgId int32 `protobuf:"varint,1,opt,name=CfgId,proto3" json:"CfgId,omitempty"` // 配置id
	Num   int32 `protobuf:"varint,2,opt,name=Num,proto3" json:"Num,omitempty"`     // 数量
}

func (x *ElemNum) Reset() {
	*x = ElemNum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bags_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ElemNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ElemNum) ProtoMessage() {}

func (x *ElemNum) ProtoReflect() protoreflect.Message {
	mi := &file_bags_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ElemNum.ProtoReflect.Descriptor instead.
func (*ElemNum) Descriptor() ([]byte, []int) {
	return file_bags_proto_rawDescGZIP(), []int{3}
}

func (x *ElemNum) GetCfgId() int32 {
	if x != nil {
		return x.CfgId
	}
	return 0
}

func (x *ElemNum) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

// 背包数据同步给客户端
type BagsSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountItem  map[int32]int32            `protobuf:"bytes,1,rep,name=CountItem,proto3" json:"CountItem,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`  // 可叠加的普通物品
	UniqueItem map[int64]*UniqueCountItem `protobuf:"bytes,2,rep,name=UniqueItem,proto3" json:"UniqueItem,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 不可叠加的普通物品
	Equip      map[int64]*Equip           `protobuf:"bytes,3,rep,name=Equip,proto3" json:"Equip,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`           // 装备
}

func (x *BagsSync) Reset() {
	*x = BagsSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bags_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BagsSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BagsSync) ProtoMessage() {}

func (x *BagsSync) ProtoReflect() protoreflect.Message {
	mi := &file_bags_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BagsSync.ProtoReflect.Descriptor instead.
func (*BagsSync) Descriptor() ([]byte, []int) {
	return file_bags_proto_rawDescGZIP(), []int{4}
}

func (x *BagsSync) GetCountItem() map[int32]int32 {
	if x != nil {
		return x.CountItem
	}
	return nil
}

func (x *BagsSync) GetUniqueItem() map[int64]*UniqueCountItem {
	if x != nil {
		return x.UniqueItem
	}
	return nil
}

func (x *BagsSync) GetEquip() map[int64]*Equip {
	if x != nil {
		return x.Equip
	}
	return nil
}

var File_bags_proto protoreflect.FileDescriptor

var file_bags_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x62, 0x61, 0x67, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x09, 0x63, 0x66, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x13, 0x45, 0x6c, 0x65, 0x6d, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29,
	0x0a, 0x07, 0x45, 0x6c, 0x65, 0x6d, 0x4f, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x4f, 0x70,
	0x52, 0x07, 0x45, 0x6c, 0x65, 0x6d, 0x4f, 0x70, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x06, 0x45, 0x6c,
	0x65, 0x6d, 0x4f, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x6c, 0x65,
	0x6d, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x30, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x1a, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x31, 0x0a,
	0x07, 0x45, 0x6c, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x66, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x66, 0x67, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x4e, 0x75, 0x6d,
	0x22, 0xa2, 0x03, 0x0a, 0x08, 0x42, 0x61, 0x67, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x3e, 0x0a,
	0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x67, 0x73, 0x53,
	0x79, 0x6e, 0x63, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x41, 0x0a,
	0x0a, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x67, 0x73,
	0x53, 0x79, 0x6e, 0x63, 0x2e, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x32, 0x0a, 0x05, 0x45, 0x71, 0x75, 0x69, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x42, 0x61, 0x67, 0x73, 0x53, 0x79,
	0x6e, 0x63, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x1a, 0x3c, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x57, 0x0a, 0x0f, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x48, 0x0a, 0x0a, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x7b, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x10, 0x03, 0x2a, 0x63, 0x0a, 0x0a, 0x45, 0x6c, 0x65, 0x6d, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x6c, 0x65, 0x6d, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e,
	0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x6c, 0x65, 0x6d, 0x4f, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x41, 0x64, 0x64, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x6c, 0x65,
	0x6d, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x45, 0x6c, 0x65, 0x6d, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x03, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bags_proto_rawDescOnce sync.Once
	file_bags_proto_rawDescData = file_bags_proto_rawDesc
)

func file_bags_proto_rawDescGZIP() []byte {
	file_bags_proto_rawDescOnce.Do(func() {
		file_bags_proto_rawDescData = protoimpl.X.CompressGZIP(file_bags_proto_rawDescData)
	})
	return file_bags_proto_rawDescData
}

var file_bags_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_bags_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_bags_proto_goTypes = []interface{}{
	(ContainerType)(0),          // 0: gserver.ContainerType
	(ElemOpType)(0),             // 1: gserver.ElemOpType
	(*ElemContainerUpdate)(nil), // 2: gserver.ElemContainerUpdate
	(*ElemOp)(nil),              // 3: gserver.ElemOp
	(*UniqueId)(nil),            // 4: gserver.UniqueId
	(*ElemNum)(nil),             // 5: gserver.ElemNum
	(*BagsSync)(nil),            // 6: gserver.BagsSync
	nil,                         // 7: gserver.BagsSync.CountItemEntry
	nil,                         // 8: gserver.BagsSync.UniqueItemEntry
	nil,                         // 9: gserver.BagsSync.EquipEntry
	(*anypb.Any)(nil),           // 10: google.protobuf.Any
	(*UniqueCountItem)(nil),     // 11: gserver.UniqueCountItem
	(*Equip)(nil),               // 12: gserver.Equip
}
var file_bags_proto_depIdxs = []int32{
	3,  // 0: gserver.ElemContainerUpdate.ElemOps:type_name -> gserver.ElemOp
	0,  // 1: gserver.ElemOp.ContainerType:type_name -> gserver.ContainerType
	1,  // 2: gserver.ElemOp.OpType:type_name -> gserver.ElemOpType
	10, // 3: gserver.ElemOp.elemData:type_name -> google.protobuf.Any
	7,  // 4: gserver.BagsSync.CountItem:type_name -> gserver.BagsSync.CountItemEntry
	8,  // 5: gserver.BagsSync.UniqueItem:type_name -> gserver.BagsSync.UniqueItemEntry
	9,  // 6: gserver.BagsSync.Equip:type_name -> gserver.BagsSync.EquipEntry
	11, // 7: gserver.BagsSync.UniqueItemEntry.value:type_name -> gserver.UniqueCountItem
	12, // 8: gserver.BagsSync.EquipEntry.value:type_name -> gserver.Equip
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_bags_proto_init() }
func file_bags_proto_init() {
	if File_bags_proto != nil {
		return
	}
	file_cfg_proto_init()
	file_item_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bags_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElemContainerUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bags_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElemOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bags_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UniqueId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bags_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ElemNum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bags_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BagsSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bags_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bags_proto_goTypes,
		DependencyIndexes: file_bags_proto_depIdxs,
		EnumInfos:         file_bags_proto_enumTypes,
		MessageInfos:      file_bags_proto_msgTypes,
	}.Build()
	File_bags_proto = out.File
	file_bags_proto_rawDesc = nil
	file_bags_proto_goTypes = nil
	file_bags_proto_depIdxs = nil
}
