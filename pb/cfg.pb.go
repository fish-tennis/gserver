// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.1
// source: cfg.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 刷新方式
type RefreshType int32

const (
	RefreshType_RefreshType_None RefreshType = 0 // 解决"The first enum value must be zero in proto3."的报错
	RefreshType_RefreshType_Day  RefreshType = 1 // 每日重置
)

// Enum value maps for RefreshType.
var (
	RefreshType_name = map[int32]string{
		0: "RefreshType_None",
		1: "RefreshType_Day",
	}
	RefreshType_value = map[string]int32{
		"RefreshType_None": 0,
		"RefreshType_Day":  1,
	}
)

func (x RefreshType) Enum() *RefreshType {
	p := new(RefreshType)
	*p = x
	return p
}

func (x RefreshType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RefreshType) Descriptor() protoreflect.EnumDescriptor {
	return file_cfg_proto_enumTypes[0].Descriptor()
}

func (RefreshType) Type() protoreflect.EnumType {
	return &file_cfg_proto_enumTypes[0]
}

func (x RefreshType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RefreshType.Descriptor instead.
func (RefreshType) EnumDescriptor() ([]byte, []int) {
	return file_cfg_proto_rawDescGZIP(), []int{0}
}

// 时间类型
type TimeType int32

const (
	TimeType_TimeType_None      TimeType = 0
	TimeType_TimeType_Timestamp TimeType = 1 // 时间戳
	TimeType_TimeType_Date      TimeType = 2 // 日期(格式:20240219)
)

// Enum value maps for TimeType.
var (
	TimeType_name = map[int32]string{
		0: "TimeType_None",
		1: "TimeType_Timestamp",
		2: "TimeType_Date",
	}
	TimeType_value = map[string]int32{
		"TimeType_None":      0,
		"TimeType_Timestamp": 1,
		"TimeType_Date":      2,
	}
)

func (x TimeType) Enum() *TimeType {
	p := new(TimeType)
	*p = x
	return p
}

func (x TimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_cfg_proto_enumTypes[1].Descriptor()
}

func (TimeType) Type() protoreflect.EnumType {
	return &file_cfg_proto_enumTypes[1]
}

func (x TimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeType.Descriptor instead.
func (TimeType) EnumDescriptor() ([]byte, []int) {
	return file_cfg_proto_rawDescGZIP(), []int{1}
}

// 物品数量
type ItemNum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CfgId int32 `protobuf:"varint,1,opt,name=CfgId,proto3" json:"CfgId,omitempty"` // 物品配置id
	Num   int32 `protobuf:"varint,2,opt,name=Num,proto3" json:"Num,omitempty"`     // 物品数量
}

func (x *ItemNum) Reset() {
	*x = ItemNum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cfg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemNum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemNum) ProtoMessage() {}

func (x *ItemNum) ProtoReflect() protoreflect.Message {
	mi := &file_cfg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemNum.ProtoReflect.Descriptor instead.
func (*ItemNum) Descriptor() ([]byte, []int) {
	return file_cfg_proto_rawDescGZIP(), []int{0}
}

func (x *ItemNum) GetCfgId() int32 {
	if x != nil {
		return x.CfgId
	}
	return 0
}

func (x *ItemNum) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

// 物品配置
type ItemCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CfgId  int32  `protobuf:"varint,1,opt,name=CfgId,proto3" json:"CfgId,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Detail string `protobuf:"bytes,3,opt,name=Detail,proto3" json:"Detail,omitempty"`
	Unique bool   `protobuf:"varint,4,opt,name=Unique,proto3" json:"Unique,omitempty"` // 是否不可叠加
}

func (x *ItemCfg) Reset() {
	*x = ItemCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cfg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemCfg) ProtoMessage() {}

func (x *ItemCfg) ProtoReflect() protoreflect.Message {
	mi := &file_cfg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemCfg.ProtoReflect.Descriptor instead.
func (*ItemCfg) Descriptor() ([]byte, []int) {
	return file_cfg_proto_rawDescGZIP(), []int{1}
}

func (x *ItemCfg) GetCfgId() int32 {
	if x != nil {
		return x.CfgId
	}
	return 0
}

func (x *ItemCfg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ItemCfg) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *ItemCfg) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

// 任务基础配置
type BaseQuestCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CfgId    int32      `protobuf:"varint,1,opt,name=CfgId,proto3" json:"CfgId,omitempty"`
	Name     string     `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Detail   string     `protobuf:"bytes,3,opt,name=Detail,proto3" json:"Detail,omitempty"`
	Rewards  []*ItemNum `protobuf:"bytes,4,rep,name=Rewards,proto3" json:"Rewards,omitempty"`
	PreQuest int32      `protobuf:"varint,5,opt,name=PreQuest,proto3" json:"PreQuest,omitempty"` // 前置任务
}

func (x *BaseQuestCfg) Reset() {
	*x = BaseQuestCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cfg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseQuestCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseQuestCfg) ProtoMessage() {}

func (x *BaseQuestCfg) ProtoReflect() protoreflect.Message {
	mi := &file_cfg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseQuestCfg.ProtoReflect.Descriptor instead.
func (*BaseQuestCfg) Descriptor() ([]byte, []int) {
	return file_cfg_proto_rawDescGZIP(), []int{2}
}

func (x *BaseQuestCfg) GetCfgId() int32 {
	if x != nil {
		return x.CfgId
	}
	return 0
}

func (x *BaseQuestCfg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseQuestCfg) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *BaseQuestCfg) GetRewards() []*ItemNum {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *BaseQuestCfg) GetPreQuest() int32 {
	if x != nil {
		return x.PreQuest
	}
	return 0
}

// 条件基础配置
type BaseConditionCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32  `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Arg  int32  `protobuf:"varint,2,opt,name=Arg,proto3" json:"Arg,omitempty"`
	Op   string `protobuf:"bytes,3,opt,name=Op,proto3" json:"Op,omitempty"`
}

func (x *BaseConditionCfg) Reset() {
	*x = BaseConditionCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cfg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseConditionCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseConditionCfg) ProtoMessage() {}

func (x *BaseConditionCfg) ProtoReflect() protoreflect.Message {
	mi := &file_cfg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseConditionCfg.ProtoReflect.Descriptor instead.
func (*BaseConditionCfg) Descriptor() ([]byte, []int) {
	return file_cfg_proto_rawDescGZIP(), []int{3}
}

func (x *BaseConditionCfg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BaseConditionCfg) GetArg() int32 {
	if x != nil {
		return x.Arg
	}
	return 0
}

func (x *BaseConditionCfg) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

// 进度基础配置
type BaseProgressCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      int32    `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`           // 进度类型
	CountType int32    `protobuf:"varint,2,opt,name=CountType,proto3" json:"CountType,omitempty"` // 计数类型
	Total     int32    `protobuf:"varint,3,opt,name=Total,proto3" json:"Total,omitempty"`         // 总进度要求
	Events    []string `protobuf:"bytes,4,rep,name=Events,proto3" json:"Events,omitempty"`        // 响应事件
}

func (x *BaseProgressCfg) Reset() {
	*x = BaseProgressCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cfg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseProgressCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseProgressCfg) ProtoMessage() {}

func (x *BaseProgressCfg) ProtoReflect() protoreflect.Message {
	mi := &file_cfg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseProgressCfg.ProtoReflect.Descriptor instead.
func (*BaseProgressCfg) Descriptor() ([]byte, []int) {
	return file_cfg_proto_rawDescGZIP(), []int{4}
}

func (x *BaseProgressCfg) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BaseProgressCfg) GetCountType() int32 {
	if x != nil {
		return x.CountType
	}
	return 0
}

func (x *BaseProgressCfg) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BaseProgressCfg) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

// 活动基础配置
type BaseActivityCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CfgId             int32          `protobuf:"varint,1,opt,name=CfgId,proto3" json:"CfgId,omitempty"`
	Name              string         `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Detail            string         `protobuf:"bytes,3,opt,name=Detail,proto3" json:"Detail,omitempty"`
	Template          string         `protobuf:"bytes,4,opt,name=Template,proto3" json:"Template,omitempty"`                     // 活动模板
	RefreshType       int32          `protobuf:"varint,5,opt,name=RefreshType,proto3" json:"RefreshType,omitempty"`              // 刷新机制
	CycleType         int32          `protobuf:"varint,6,opt,name=CycleType,proto3" json:"CycleType,omitempty"`                  // 活动周期
	TimeType          int32          `protobuf:"varint,7,opt,name=TimeType,proto3" json:"TimeType,omitempty"`                    // 时间类型
	BeginTime         int32          `protobuf:"varint,8,opt,name=BeginTime,proto3" json:"BeginTime,omitempty"`                  // 开始时间
	EndTime           int32          `protobuf:"varint,9,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                      // 结束时间
	Exchanges         []*ExchangeCfg `protobuf:"bytes,10,rep,name=Exchanges,proto3" json:"Exchanges,omitempty"`                  // 兑换配置
	IsOff             bool           `protobuf:"varint,11,opt,name=IsOff,proto3" json:"IsOff,omitempty"`                         // 是否关闭
	RemoveDataWhenEnd bool           `protobuf:"varint,12,opt,name=RemoveDataWhenEnd,proto3" json:"RemoveDataWhenEnd,omitempty"` // 活动结束时,是否删除活动数据
	MinPlayerLevel    int32          `protobuf:"varint,14,opt,name=MinPlayerLevel,proto3" json:"MinPlayerLevel,omitempty"`       // 参与活动的最低玩家等级要求
	MaxPlayerLevel    int32          `protobuf:"varint,15,opt,name=MaxPlayerLevel,proto3" json:"MaxPlayerLevel,omitempty"`       // 参与活动的最大玩家等级上限
}

func (x *BaseActivityCfg) Reset() {
	*x = BaseActivityCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cfg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseActivityCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseActivityCfg) ProtoMessage() {}

func (x *BaseActivityCfg) ProtoReflect() protoreflect.Message {
	mi := &file_cfg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseActivityCfg.ProtoReflect.Descriptor instead.
func (*BaseActivityCfg) Descriptor() ([]byte, []int) {
	return file_cfg_proto_rawDescGZIP(), []int{5}
}

func (x *BaseActivityCfg) GetCfgId() int32 {
	if x != nil {
		return x.CfgId
	}
	return 0
}

func (x *BaseActivityCfg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseActivityCfg) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *BaseActivityCfg) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *BaseActivityCfg) GetRefreshType() int32 {
	if x != nil {
		return x.RefreshType
	}
	return 0
}

func (x *BaseActivityCfg) GetCycleType() int32 {
	if x != nil {
		return x.CycleType
	}
	return 0
}

func (x *BaseActivityCfg) GetTimeType() int32 {
	if x != nil {
		return x.TimeType
	}
	return 0
}

func (x *BaseActivityCfg) GetBeginTime() int32 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *BaseActivityCfg) GetEndTime() int32 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *BaseActivityCfg) GetExchanges() []*ExchangeCfg {
	if x != nil {
		return x.Exchanges
	}
	return nil
}

func (x *BaseActivityCfg) GetIsOff() bool {
	if x != nil {
		return x.IsOff
	}
	return false
}

func (x *BaseActivityCfg) GetRemoveDataWhenEnd() bool {
	if x != nil {
		return x.RemoveDataWhenEnd
	}
	return false
}

func (x *BaseActivityCfg) GetMinPlayerLevel() int32 {
	if x != nil {
		return x.MinPlayerLevel
	}
	return 0
}

func (x *BaseActivityCfg) GetMaxPlayerLevel() int32 {
	if x != nil {
		return x.MaxPlayerLevel
	}
	return 0
}

// 兑换配置
type ExchangeCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CfgId        int32      `protobuf:"varint,1,opt,name=CfgId,proto3" json:"CfgId,omitempty"`
	ConsumeItems []*ItemNum `protobuf:"bytes,2,rep,name=ConsumeItems,proto3" json:"ConsumeItems,omitempty"` // 需要消耗的物品
	Rewards      []*ItemNum `protobuf:"bytes,3,rep,name=Rewards,proto3" json:"Rewards,omitempty"`           // 获得物品
	CountLimit   int32      `protobuf:"varint,4,opt,name=CountLimit,proto3" json:"CountLimit,omitempty"`    // 兑换次数限制
}

func (x *ExchangeCfg) Reset() {
	*x = ExchangeCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cfg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeCfg) ProtoMessage() {}

func (x *ExchangeCfg) ProtoReflect() protoreflect.Message {
	mi := &file_cfg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeCfg.ProtoReflect.Descriptor instead.
func (*ExchangeCfg) Descriptor() ([]byte, []int) {
	return file_cfg_proto_rawDescGZIP(), []int{6}
}

func (x *ExchangeCfg) GetCfgId() int32 {
	if x != nil {
		return x.CfgId
	}
	return 0
}

func (x *ExchangeCfg) GetConsumeItems() []*ItemNum {
	if x != nil {
		return x.ConsumeItems
	}
	return nil
}

func (x *ExchangeCfg) GetRewards() []*ItemNum {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ExchangeCfg) GetCountLimit() int32 {
	if x != nil {
		return x.CountLimit
	}
	return 0
}

var File_cfg_proto protoreflect.FileDescriptor

var file_cfg_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x66, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x22, 0x31, 0x0a, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x66, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x43, 0x66, 0x67, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x22, 0x63, 0x0a, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x66, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x66, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x43, 0x66, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x22, 0x98, 0x01, 0x0a,
	0x0c, 0x42, 0x61, 0x73, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x43, 0x66, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x66, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x66,
	0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x2a, 0x0a, 0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4e,
	0x75, 0x6d, 0x52, 0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x72, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50,
	0x72, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x10, 0x42, 0x61, 0x73, 0x65, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x66, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x41, 0x72, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x41, 0x72,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4f,
	0x70, 0x22, 0x71, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x43, 0x66, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0xcb, 0x03, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x66, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x66, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x66, 0x67, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x79, 0x63, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43, 0x79, 0x63,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x43, 0x66, 0x67, 0x52, 0x09, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x49, 0x73, 0x4f, 0x66, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x49,
	0x73, 0x4f, 0x66, 0x66, 0x12, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x57, 0x68, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x57, 0x68, 0x65, 0x6e, 0x45,
	0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x4d, 0x69, 0x6e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x61,
	0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x4d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x22, 0xa5, 0x01, 0x0a, 0x0b, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43,
	0x66, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x66, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x43, 0x66, 0x67, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d,
	0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2a,
	0x0a, 0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75,
	0x6d, 0x52, 0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x2a, 0x38, 0x0a, 0x0b, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44,
	0x61, 0x79, 0x10, 0x01, 0x2a, 0x48, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x11, 0x0a, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4e, 0x6f, 0x6e,
	0x65, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x54,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x61, 0x74, 0x65, 0x10, 0x02, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cfg_proto_rawDescOnce sync.Once
	file_cfg_proto_rawDescData = file_cfg_proto_rawDesc
)

func file_cfg_proto_rawDescGZIP() []byte {
	file_cfg_proto_rawDescOnce.Do(func() {
		file_cfg_proto_rawDescData = protoimpl.X.CompressGZIP(file_cfg_proto_rawDescData)
	})
	return file_cfg_proto_rawDescData
}

var file_cfg_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_cfg_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_cfg_proto_goTypes = []interface{}{
	(RefreshType)(0),         // 0: gserver.RefreshType
	(TimeType)(0),            // 1: gserver.TimeType
	(*ItemNum)(nil),          // 2: gserver.ItemNum
	(*ItemCfg)(nil),          // 3: gserver.ItemCfg
	(*BaseQuestCfg)(nil),     // 4: gserver.BaseQuestCfg
	(*BaseConditionCfg)(nil), // 5: gserver.BaseConditionCfg
	(*BaseProgressCfg)(nil),  // 6: gserver.BaseProgressCfg
	(*BaseActivityCfg)(nil),  // 7: gserver.BaseActivityCfg
	(*ExchangeCfg)(nil),      // 8: gserver.ExchangeCfg
}
var file_cfg_proto_depIdxs = []int32{
	2, // 0: gserver.BaseQuestCfg.Rewards:type_name -> gserver.ItemNum
	8, // 1: gserver.BaseActivityCfg.Exchanges:type_name -> gserver.ExchangeCfg
	2, // 2: gserver.ExchangeCfg.ConsumeItems:type_name -> gserver.ItemNum
	2, // 3: gserver.ExchangeCfg.Rewards:type_name -> gserver.ItemNum
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_cfg_proto_init() }
func file_cfg_proto_init() {
	if File_cfg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cfg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemNum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cfg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cfg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseQuestCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cfg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseConditionCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cfg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseProgressCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cfg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseActivityCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cfg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cfg_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cfg_proto_goTypes,
		DependencyIndexes: file_cfg_proto_depIdxs,
		EnumInfos:         file_cfg_proto_enumTypes,
		MessageInfos:      file_cfg_proto_msgTypes,
	}.Build()
	File_cfg_proto = out.File
	file_cfg_proto_rawDesc = nil
	file_cfg_proto_goTypes = nil
	file_cfg_proto_depIdxs = nil
}
