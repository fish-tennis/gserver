// Code generated by proto_code_gen. DO NOT EDIT
// https://github.com/fish-tennis/proto_code_gen
package gen

import (
	. "github.com/fish-tennis/gserver/pb"
)

type ItemNumReader struct {
	v *ItemNum
}

func NewItemNumReader(src *ItemNum) *ItemNumReader {
	return &ItemNumReader{v:src}
}


func (r *ItemNumReader) GetCfgId() int32 {
	return r.v.GetCfgId()
}

func (r *ItemNumReader) GetNum() int32 {
	return r.v.GetNum()
}

type ItemCfgReader struct {
	v *ItemCfg
}

func NewItemCfgReader(src *ItemCfg) *ItemCfgReader {
	return &ItemCfgReader{v:src}
}


func (r *ItemCfgReader) GetCfgId() int32 {
	return r.v.GetCfgId()
}

func (r *ItemCfgReader) GetName() string {
	return r.v.GetName()
}

func (r *ItemCfgReader) GetDetail() string {
	return r.v.GetDetail()
}

func (r *ItemCfgReader) GetUnique() bool {
	return r.v.GetUnique()
}

type BaseQuestCfgReader struct {
	v *BaseQuestCfg
}

func NewBaseQuestCfgReader(src *BaseQuestCfg) *BaseQuestCfgReader {
	return &BaseQuestCfgReader{v:src}
}


func (r *BaseQuestCfgReader) GetCfgId() int32 {
	return r.v.GetCfgId()
}

func (r *BaseQuestCfgReader) GetName() string {
	return r.v.GetName()
}

func (r *BaseQuestCfgReader) GetDetail() string {
	return r.v.GetDetail()
}

func (r *BaseQuestCfgReader) GetRewards() []*ItemNumReader {
	src := r.v.GetRewards()
	if src == nil {
		return nil
	}
	sliceReader := make([]*ItemNumReader,len(src))
	for i,v := range src {
		sliceReader[i] = NewItemNumReader(v)
	}
	return sliceReader
}

type BaseConditionCfgReader struct {
	v *BaseConditionCfg
}

func NewBaseConditionCfgReader(src *BaseConditionCfg) *BaseConditionCfgReader {
	return &BaseConditionCfgReader{v:src}
}


func (r *BaseConditionCfgReader) GetConditionType() int32 {
	return r.v.GetConditionType()
}

func (r *BaseConditionCfgReader) GetProgressType() int32 {
	return r.v.GetProgressType()
}

func (r *BaseConditionCfgReader) GetTotal() int32 {
	return r.v.GetTotal()
}
